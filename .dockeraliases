#!/bin/sh

#########################################
# emulates the commands below like they would natively be in docker
# docker clean -- runs --> docker-clean
# etc
docker() {
  if command -v "docker-$1" > /dev/null 2>&1; then
    subcommand=$1
    shift
    docker-$subcommand $@
  else
    /usr/local/bin/docker $@
  fi
}

# Emulates Docker Terminal Quickstart alias using alias
docker-qs() {
    bash --login '/Applications/Docker/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh'
}

# cleans untagged images
docker-clean() {
  for i in `docker images|grep \<none\>|awk '{print $3}'`;do docker rmi -f $i;done
}

# purges all images and containers
docker-purge() {
  echo -n "Are you sure you want to purge Docker? This will delete all containers and images! [y|N] "
  read response
  if [[ $response =~ ^(y|yes|Y) ]];then
    #docker rm $(docker ps -a -q)
    if [[ $(docker ps -q) ]]; then
      for i in `docker ps -q|awk '{print $1}'`; do
        docker stop -f $i
        docker rm -f $i
      done
    fi
    #docker rmi $(docker images -q)
    if [[ $(docker images -q) ]]; then
      #docker rmi $(docker images -qa)
      for i in `docker images -q|awk '{print $1}'`; do
        docker rmi -f $i
      done
    fi
  fi
}

# restarts specified docker machine
docker-restart() {
  if [ -z "$1" ]; then
    echo "Error: Expected to get one or more machine names as arguments."
  else
    docker-machine ls | grep "$1" &> /dev/null
    if [[ $? == 0 ]]; then
      docker-machine restart $1 2> /dev/null | head -n -1
      # docker-machine env $1 2> /dev/null | head -n -2
      env_out=$(docker-machine env $1) &> /dev/null
      # if error on env_out, its because machine hasn't started yet
      if [[ $? != 0 ]]; then
        # start machine and redo env_out
        docker-machine start $1 &> /dev/null
        env_out=$(docker-machine env $1) &> /dev/null
      fi
      echo "VM Started. Exporting Docker variables."
      echo "${env_out}" | head -n -2
      eval "$(docker-machine env $1)"
    else
      echo "Error: Machine '$1' not found."
    fi
  fi
}
